"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./app/components/particles.tsx":
/*!**************************************!*\
  !*** ./app/components/particles.tsx ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Particles; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/.pnpm/next@13.5.6_@opentelemetry+api@1.4.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/.pnpm/next@13.5.6_@opentelemetry+api@1.4.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _util_mouse__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/util/mouse */ \"(app-pages-browser)/./util/mouse.ts\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\nfunction Particles(param) {\n    let { className = \"\", quantity = 100, staticity = 50, ease = 50, refresh = false } = param;\n    _s();\n    const canvasRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const canvasContainerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const circles = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)([]);\n    const mousePosition = (0,_util_mouse__WEBPACK_IMPORTED_MODULE_2__.useMousePosition)();\n    const mouse = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)({\n        x: 0,\n        y: 0\n    });\n    const canvasSize = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)({\n        w: 0,\n        h: 0\n    });\n    const dpr =  true ? window.devicePixelRatio : 0;\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (canvasRef.current) {\n            context.current = canvasRef.current.getContext(\"2d\");\n        }\n        initCanvas();\n        animate();\n        window.addEventListener(\"resize\", initCanvas);\n        return ()=>{\n            window.removeEventListener(\"resize\", initCanvas);\n        };\n    }, []);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        onMouseMove();\n    }, [\n        mousePosition.x,\n        mousePosition.y\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        initCanvas();\n    }, [\n        refresh\n    ]);\n    const initCanvas = ()=>{\n        resizeCanvas();\n        drawParticles();\n    };\n    const onMouseMove = ()=>{\n        if (canvasRef.current) {\n            const rect = canvasRef.current.getBoundingClientRect();\n            const { w, h } = canvasSize.current;\n            const x = mousePosition.x - rect.left - w / 2;\n            const y = mousePosition.y - rect.top - h / 2;\n            const inside = x < w / 2 && x > -w / 2 && y < h / 2 && y > -h / 2;\n            if (inside) {\n                mouse.current.x = x;\n                mouse.current.y = y;\n            }\n        }\n    };\n    const resizeCanvas = ()=>{\n        if (canvasContainerRef.current && canvasRef.current && context.current) {\n            circles.current.length = 0;\n            canvasSize.current.w = canvasContainerRef.current.offsetWidth;\n            canvasSize.current.h = canvasContainerRef.current.offsetHeight;\n            canvasRef.current.width = canvasSize.current.w * dpr;\n            canvasRef.current.height = canvasSize.current.h * dpr;\n            canvasRef.current.style.width = \"\".concat(canvasSize.current.w, \"px\");\n            canvasRef.current.style.height = \"\".concat(canvasSize.current.h, \"px\");\n            context.current.scale(dpr, dpr);\n        }\n    };\n    const circleParams = ()=>{\n        const x = Math.floor(Math.random() * canvasSize.current.w);\n        const y = Math.floor(Math.random() * canvasSize.current.h);\n        const translateX = 0;\n        const translateY = 0;\n        const size = Math.floor(Math.random() * 2) + 0.1;\n        const alpha = 0;\n        const targetAlpha = parseFloat((Math.random() * 0.6 + 0.1).toFixed(1));\n        const dx = (Math.random() - 0.5) * 0.2;\n        const dy = (Math.random() - 0.5) * 0.2;\n        const magnetism = 0.1 + Math.random() * 4;\n        return {\n            x,\n            y,\n            translateX,\n            translateY,\n            size,\n            alpha,\n            targetAlpha,\n            dx,\n            dy,\n            magnetism\n        };\n    };\n    const drawCircle = function(circle) {\n        let update = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n        if (context.current) {\n            const { x, y, translateX, translateY, size, alpha } = circle;\n            context.current.translate(translateX, translateY);\n            context.current.beginPath();\n            context.current.arc(x, y, size, 0, 2 * Math.PI);\n            context.current.fillStyle = \"rgba(255, 255, 255, \".concat(alpha, \")\");\n            context.current.fill();\n            context.current.setTransform(dpr, 0, 0, dpr, 0, 0);\n            if (!update) {\n                circles.current.push(circle);\n            }\n        }\n    };\n    const clearContext = ()=>{\n        if (context.current) {\n            context.current.clearRect(0, 0, canvasSize.current.w, canvasSize.current.h);\n        }\n    };\n    const drawParticles = ()=>{\n        clearContext();\n        const particleCount = quantity;\n        for(let i = 0; i < particleCount; i++){\n            const circle = circleParams();\n            drawCircle(circle);\n        }\n    };\n    const remapValue = (value, start1, end1, start2, end2)=>{\n        const remapped = (value - start1) * (end2 - start2) / (end1 - start1) + start2;\n        return remapped > 0 ? remapped : 0;\n    };\n    const animate = ()=>{\n        clearContext();\n        circles.current.forEach((circle, i)=>{\n            // Handle the alpha value\n            const edge = [\n                circle.x + circle.translateX - circle.size,\n                canvasSize.current.w - circle.x - circle.translateX - circle.size,\n                circle.y + circle.translateY - circle.size,\n                canvasSize.current.h - circle.y - circle.translateY - circle.size\n            ];\n            const closestEdge = edge.reduce((a, b)=>Math.min(a, b));\n            const remapClosestEdge = parseFloat(remapValue(closestEdge, 0, 20, 0, 1).toFixed(2));\n            if (remapClosestEdge > 1) {\n                circle.alpha += 0.02;\n                if (circle.alpha > circle.targetAlpha) {\n                    circle.alpha = circle.targetAlpha;\n                }\n            } else {\n                circle.alpha = circle.targetAlpha * remapClosestEdge;\n            }\n            circle.x += circle.dx;\n            circle.y += circle.dy;\n            circle.translateX += (mouse.current.x / (staticity / circle.magnetism) - circle.translateX) / ease;\n            circle.translateY += (mouse.current.y / (staticity / circle.magnetism) - circle.translateY) / ease;\n            // circle gets out of the canvas\n            if (circle.x < -circle.size || circle.x > canvasSize.current.w + circle.size || circle.y < -circle.size || circle.y > canvasSize.current.h + circle.size) {\n                // remove the circle from the array\n                circles.current.splice(i, 1);\n                // create a new circle\n                const newCircle = circleParams();\n                drawCircle(newCircle);\n            // update the circle position\n            } else {\n                drawCircle({\n                    ...circle,\n                    x: circle.x,\n                    y: circle.y,\n                    translateX: circle.translateX,\n                    translateY: circle.translateY,\n                    alpha: circle.alpha\n                }, true);\n            }\n        });\n        window.requestAnimationFrame(animate);\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: className,\n        ref: canvasContainerRef,\n        \"aria-hidden\": \"true\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"canvas\", {\n            ref: canvasRef\n        }, void 0, false, {\n            fileName: \"/Users/m.mughees/Desktop/Personal-Portfolio/app/components/particles.tsx\",\n            lineNumber: 231,\n            columnNumber: 4\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/m.mughees/Desktop/Personal-Portfolio/app/components/particles.tsx\",\n        lineNumber: 230,\n        columnNumber: 3\n    }, this);\n}\n_s(Particles, \"PXFWNhOiZ9wLPD/Efwl/ee6MVuU=\", false, function() {\n    return [\n        _util_mouse__WEBPACK_IMPORTED_MODULE_2__.useMousePosition\n    ];\n});\n_c = Particles;\nvar _c;\n$RefreshReg$(_c, \"Particles\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/components/particles.tsx\n"));

/***/ })

});